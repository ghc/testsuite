
==================== Tidy Core ====================
Result size of Tidy Core = {terms: 36, types: 29, coercions: 0}

T7360.$WFoo3 [InlPrag=INLINE] :: GHC.Types.Int -> T7360.Foo
[GblId[DataConWrapper],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType <S,U>m3,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (dt [Occ=Once!] :: GHC.Types.Int) ->
                 case dt of _ [Occ=Dead] { GHC.Types.I# dt [Occ=Once] ->
                 T7360.Foo3 dt
                 }}]
T7360.$WFoo3 =
  \ (dt [Occ=Once!] :: GHC.Types.Int) ->
    case dt of _ [Occ=Dead] { GHC.Types.I# dt [Occ=Once] ->
    T7360.Foo3 dt
    }

T7360.fun1 [InlPrag=NOINLINE] :: T7360.Foo -> ()
[GblId, Arity=1, Caf=NoCafRefs, Str=DmdType <S,1*U>]
T7360.fun1 =
  \ (x :: T7360.Foo) ->
    case x of _ [Occ=Dead] { __DEFAULT -> GHC.Tuple.() }

T7360.fun4 :: ()
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 20 0}]
T7360.fun4 = T7360.fun1 T7360.Foo1

T7360.fun3 :: GHC.Types.Int
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
T7360.fun3 = GHC.Types.I# 0

T7360.fun2 :: forall a. [a] -> ((), GHC.Types.Int)
[GblId,
 Arity=1,
 Str=DmdType <L,1*U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a) (x [Occ=Once!] :: [a]) ->
                 (T7360.fun4,
                  case x of wild {
                    [] -> T7360.fun3;
                    : _ [Occ=Dead] _ [Occ=Dead] ->
                      case GHC.List.$wlenAcc @ a wild 0 of ww { __DEFAULT ->
                      GHC.Types.I# ww
                      }
                  })}]
T7360.fun2 =
  \ (@ a) (x :: [a]) ->
    (T7360.fun4,
     case x of wild {
       [] -> T7360.fun3;
       : ds ds1 ->
         case GHC.List.$wlenAcc @ a wild 0 of ww { __DEFAULT ->
         GHC.Types.I# ww
         }
     })



