
==================== Tidy Core ====================
Result size of Tidy Core = {terms: 54, types: 38, coercions: 0}

Rec {
T4908.f_$s$wf [Occ=LoopBreaker]
  :: GHC.Prim.Int#
     -> GHC.Types.Int -> GHC.Prim.Int# -> GHC.Types.Bool
[GblId, Arity=3, Caf=NoCafRefs, Str=DmdType <S,1*U><L,A><L,U>]
T4908.f_$s$wf =
  \ (sc :: GHC.Prim.Int#)
    (sc1 :: GHC.Types.Int)
    (sc2 :: GHC.Prim.Int#) ->
    case sc of ds {
      __DEFAULT ->
        case sc2 of ds1 {
          __DEFAULT -> T4908.f_$s$wf (GHC.Prim.-# ds 1) sc1 ds1;
          0 -> GHC.Types.True
        };
      0 -> GHC.Types.True
    }
end Rec }

T4908.$wf
  :: GHC.Prim.Int#
     -> (GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType <S,1*U><L,1*U(A,U(U))>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30 20] 101 20}]
T4908.$wf =
  \ (ww :: GHC.Prim.Int#) (w :: (GHC.Types.Int, GHC.Types.Int)) ->
    case ww of ds {
      __DEFAULT ->
        case w of _ [Occ=Dead] { (a, b) ->
        case b of _ [Occ=Dead] { GHC.Types.I# ds1 ->
        case ds1 of ds2 {
          __DEFAULT -> T4908.f_$s$wf (GHC.Prim.-# ds 1) a ds2;
          0 -> GHC.Types.True
        }
        }
        };
      0 -> GHC.Types.True
    }

T4908.f [InlPrag=INLINE[0]]
  :: GHC.Types.Int
     -> (GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType <S(S),1*U(1*U)><L,1*U(A,U(U))>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w [Occ=Once!] :: GHC.Types.Int)
                 (w1 [Occ=Once] :: (GHC.Types.Int, GHC.Types.Int)) ->
                 case w of _ [Occ=Dead] { GHC.Types.I# ww1 [Occ=Once] ->
                 T4908.$wf ww1 w1
                 }}]
T4908.f =
  \ (w :: GHC.Types.Int) (w1 :: (GHC.Types.Int, GHC.Types.Int)) ->
    case w of _ [Occ=Dead] { GHC.Types.I# ww1 -> T4908.$wf ww1 w1 }


------ Local rules for imported ids --------
"SC:$wf0" [ALWAYS]
    forall (sc :: GHC.Prim.Int#)
           (sc1 :: GHC.Types.Int)
           (sc2 :: GHC.Prim.Int#).
      T4908.$wf sc (sc1, GHC.Types.I# sc2)
      = T4908.f_$s$wf sc sc1 sc2


